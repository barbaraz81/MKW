% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/morphospace.R
\name{morphospace}
\alias{morphospace}
\title{Function to create a "morphospace"}
\usage{
morphospace(
  x,
  y,
  groups,
  plot.function,
  plot.points = TRUE,
  output = "plot",
  smoothing.method = NA,
  smoothing.param = NULL,
  plot.new = FALSE,
  plot.new.opt = NULL,
  ...
)
}
\arguments{
\item{x}{Either the \code{x} values of the dataset or the whole dataset (in \code{matrix}, \code{data.frame} or \code{function} format).}

\item{y}{Has to be provided if and only if \code{x} is a single vector.}

\item{groups}{Optional. A factor vector defining subsets (or 'groups') in the dataset to plot separate morphospaces at once.}

\item{plot.function}{Type of function used to plot the polygon: \code{"points"} or \code{"polygon"}. Default is \code{"points"}.}

\item{plot.points}{Logical. If the data points have to be plotted. Default is \code{TRUE}.}

\item{output}{Type of output, either the plot of the current dataset (\code{output="plot"}, the default) or the data allowing to plot the morphospace (\code{output=NA} or any other value) in a little easier way than using \code{chull} function.}

\item{smoothing.method}{The smoothing method to use if the user wants a smoothed morphospace. See \link[smoothr]{smooth} for more details.}

\item{smoothing.param}{The smoothing parameters to use if the user wants a smoothed morphospace. See \link[smoothr]{smooth} for more details. Must be a list with named elements, the names being the names of the parameters.}

\item{plot.new}{If there has to be a new plot or if morphospace adds to a current plot. By default, it adds to the previous plot.}

\item{plot.new.opt}{The options to be used if a new plot is added (if requested or if drawing smoothed morphospaces). Only works for the general frame of the plot (axis, labels etc). Must be a list of arguments.}

\item{...}{graphical arguments, depend of the \code{plot.function} choosed. If \code{plot.function="polygon"} and \code{plot.points=TRUE} and the user wants to specify the \code{col} arguments for both the polygon (i.e., filling color) and the points (i.e., border points color), it is recommended to specify the polygon \code{col} as \code{col} and the points \code{col} as \code{col.points}.}
}
\description{
This functions performs a "morphospace" of a dataset of two vectors: it connects extremal points to plot the largest polygon possible. This is a rather generic function and can be applied on datasets no matter of which are the vectors. The dataset just needs two vectors: firstly, plot the two vectors against each other (second vector in y-axis; first vector in x-axis), then run morphospace to superimpose a polygon to the plot.
}
\details{
The function firstly identify the most extreme point on the x-axis, which is the starting point of the polygon.
Secondly, the function finds the second point of the polygon which is defined as having the steepest slope with the first point among all other points.
Thirdly, the function iteratively calculates the angle (using the same code than the function \code{Angle} in the package \code{LearnGeom}) between the slopes preceeding and succeeding the i-point (starting from the second defined point): the slope preceeding the i-point is unique (it is defined by the actual i point and the preceeding i-1 point), each slope succeeding the i-point is considered (with all other points). The largest angle is retained together with the associated i+1 point.
At the end, the function creates another data.frame of two vectors which each point surrounding the whole scatterplot; the function creates the polygon based on these points.
}
\examples{
# For a simple morphospace
vec1_test<-sample.int(15,replace=TRUE)
vec2_test<-sample.int(15,replace=TRUE)
plot(vec1_test,vec2_test)
morphospace(vec1_test,vec2_test) # For a "raw" morphospace
morphospace(vec1_test,vec2_test,smoothing.method="spline",plot.points = FALSE) # For an example of smoothed (here, using splines) morphospace
morphospace(vec1_test,vec2_test,smoothing.method="spline",plot.points = TRUE) # Same, with the data
# For a morphospace with several subgroups
vec1_test<-c(runif(20,0,10),runif(20,10,20),runif(20,20,30))
vec2_test<-sample.int(60,replace=TRUE)
groups_test<-as.factor(c(rep("a",20),rep("b",20),rep("c",20)))
# For a "raw" morphospace
plot(vec1_test,vec2_test,type="n")
morphospace(vec1_test,vec2_test,groups_test,pch=21,col=c("red","green3","blue"),bg=c("red","green3","blue"))
# For an example of smoothed (here, using splines) morphospace
morphospace(vec1_test,vec2_test,groups_test,pch=21,col=c("red","green3","blue"),bg=c("red","green3","blue"),smoothing.method="spline")
# The same morphospace using the polygon function and its options to draw dotted semi-transparent lines
morphospace(vec1_test,vec2_test,groups_test,plot.function="polygon",pch=21,col=scales::alpha(c("red","green3","blue"),0.25),density=15,border=c("red","green3","blue"),col.points=c("red","green3","blue"),bg=c("red","green3","blue"),lty=2,plot.new=TRUE)
# The same morphospace using the polygon function and its options to draw semi-transparent convex hulls
morphospace(vec1_test,vec2_test,groups_test,plot.function="polygon",pch=21,col=scales::alpha(c("red","green3","blue"),0.1),border=c("red","green3","blue"),col.points=c("red","green3","blue"),bg=c("red","green3","blue"),lty=2,plot.new=TRUE)

}
\seealso{
The smoothing of the morphospace is adapted from the StackExchange page \href{https://stackoverflow.com/questions/57305921/rasterizing-coordinates-for-an-irregular-polygon-changes-original-shape}{Rasterizing coordinates for an irregular polygon changes original shape}.
}
