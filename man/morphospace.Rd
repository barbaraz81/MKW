% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/morphospace.R
\name{morphospace}
\alias{morphospace}
\title{Function to create a "morphospace"}
\usage{
morphospace(
  x,
  y,
  plot.function,
  output = "plot",
  smoothing.method = NA,
  smoothing.param = NULL,
  ...
)
}
\arguments{
\item{x}{Either the \code{x} values of the dataset or the whole dataset (in \code{matrix}, \code{data.frame} or \code{function} format).}

\item{y}{Has to be provided if and only if \code{x} is a single vector.}

\item{plot.function}{Type of function used to plot the polygon: \code{"points"} or \code{"polygon"}. Default is \code{"points"}.}

\item{output}{Type of output, either the plot of the current dataset (\code{output="plot"}, the default) or the data allowing to plot the morphospace (\code{output=NA} or any other value) in a little easier way than using \code{chull} function.}

\item{smoothing.method}{The smoothing method to use if the user wants a smoothed morphospace. See \code{help(smoothr::smooth)} for more details.}

\item{smoothing.param}{The smoothing parameters to use if the user wants a smoothed morphospace. See \code{help(smoothr::smooth)} for more details. Must be a list with named elements, the names being the names of the parameters.}

\item{...}{graphical arguments, depend of the \code{plot.function} choosed}
}
\description{
This functions performs a "morphospace" of a dataset of two vectors: it connects extremal points to plot the largest polygon possible. This is a rather generic function and can be applied on datasets no matter of which are the vectors. The dataset just needs two vectors: firstly, plot the two vectors against each other (second vector in y-axis; first vector in x-axis), then run morphospace to superimpose a polygon to the plot.
}
\details{
The function firstly identify the most extreme point on the x-axis, which is the starting point of the polygon.
Secondly, the function finds the second point of the polygon which is defined as having the steepest slope with the first point among all other points.
Thirdly, the function iteratively calculates the angle (using the same code than the function \code{Angle} in the package \code{LearnGeom}) between the slopes preceeding and succeeding the i-point (starting from the second defined point): the slope preceeding the i-point is unique (it is defined by the actual i point and the preceeding i-1 point), each slope succeeding the i-point is considered (with all other points). The largest angle is retained together with the associated i+1 point.
At the end, the function creates another data.frame of two vectors which each point surrounding the whole scatterplot; the function creates the polygon based on these points.
}
\examples{
vec1_test<-sample.int(15,replace=TRUE)
vec2_test<-sample.int(15,replace=TRUE)
plot(vec1_test,vec2_test)
morphospace(vec1_test,vec2_test) # For a "raw" morphospace
morphospace(vec1_test,vec2_test,smoothing.method="spline") # For an example of smoothed (here, using splines) morphospace

}
\seealso{
The smoothing of the morphospace is adapted from the StackExchange page \href{https://stackoverflow.com/questions/57305921/rasterizing-coordinates-for-an-irregular-polygon-changes-original-shape}{Rasterizing coordinates for an irregular polygon changes original shape}.
}
